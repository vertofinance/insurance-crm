version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: insurance_crm_db
    environment:
      POSTGRES_DB: insurance_crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - insurance_crm_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: insurance_crm_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/insurance_crm
      JWT_SECRET: your-super-secret-jwt-key-here
      PORT: 3001
      NODE_ENV: production
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - insurance_crm_network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: insurance_crm_frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_WS_URL: ws://localhost:3001
      REACT_APP_MIDDLEWARE_URL: http://localhost:3002
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - insurance_crm_network

  # Middleware
  middleware:
    build:
      context: ./middleware
      dockerfile: Dockerfile
    container_name: insurance_crm_middleware
    environment:
      MIDDLEWARE_PORT: 3002
      NODE_ENV: production
      TRA_API_KEY: ${TRA_API_KEY}
      BRELA_API_KEY: ${BRELA_API_KEY}
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3002:3002"
    networks:
      - insurance_crm_network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: insurance_crm_redis
    ports:
      - "6379:6379"
    networks:
      - insurance_crm_network

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: insurance_crm_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - middleware
    networks:
      - insurance_crm_network

volumes:
  postgres_data:

networks:
  insurance_crm_network:
    driver: bridge 